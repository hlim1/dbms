/*
   -------------------------------------------
Partners: 
	Tianyu Qiu - tianyuq@email.arizona.edu
	Xudong Weng - weng@email.arizona.edu	

Comments:
	1.Overall description of your algorithms and data structures
	We put the corresponding algorithms and data structures in buf.h and the head of source code: btleafpage.C,btindexpage.C, btfile.C key.C, sorted_page.C btreefilescan.C

	2.Anything unusual in your implementation
	We put the corresponding unusual implementations in the head of corresponding source code:btleafpage.C,btindexpage.C, btfile.C key.C, sorted_page.C btreefilescan.C
	Still Have some problems on insertion, but all the overall outline is basically right.
	We will fix this problems ASAP. 

	3.What functionalities not supported well
	Insertion works not properly. So we can not test the correctness of other functions so far. 
  -----------------------------------------------
*/

Date: 02/14/14
Writer: Young-K. Suh

*** Some important files you should know ***

Makefile: a sample makefile to compile your project; this will generate an executable, named 'heaptest'. 

expected_output: an expected output from a correct implementation when heaptest is successfully finished

../include/scan.h: specifications for the Scan class.
	    ( Note: we do not expect you to change this file. )

../include/heapfile.h: specifications for the HeapFile class.
	    ( Note: we do not expect you to change this file. )

../include/hfpage.h: specifications for the HFPage class.
	    ( Note: we do not expect you to change this file. )

heapfile.C: the skeleton of the implementation of the HeapFile class.
	    ( Note: You should implement this. )

scan.C: the skeleton of the implementation of the Scan class.
	    ( Note: You should implement this. )

hfpage.C: the skeleton of the implementation of the HFPage class.
	    ( Note: You may want to replace this with your hfpage.C in HFPage.)

main.C, test_driver.C, heap_driver.C: the testing programs.


*** Date: 03/27/14 ***
*** Writer: Young-K. Suh (yksuh@cs.arizona.edu) ***

All the files in this directory:

Makefile: a sample makefile

btfile.C, btindex_page.C, btleaf_page.C, btreefilescan.C:
you need to write these .C files and their corresponding .h files in ../include.

buf.C: This has empty body. You can replace this file with your buffer manager used for project 2.

main.C, btree_driver.C, keys: these are the test driver

sorted_page.C: You also need to implement this.

hfpage.C: This has empty body. You can replace this file with your hfpage used for project 1.

Other .C files: They are same as ones used in projects 1 and 2.

expected_output: results of running the test driver using a correct implementation
